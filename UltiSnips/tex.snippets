global !p

greeks = ['alpha', 'beta', 'gamma', 'delta', 'Delta', 'theta', 'Theta', 'lambda', 'pi', 'rho', 'sigma', 'phi', 'omega', 'nabla']

symbols = ['infty', 'dots', 'to', 'leftrightarrow', 'setminus', 'mid', 'cap', 'cup', 'land', 'lor', 'subseteq', 'subset', 'implies', 'implyiedby', 'iff', 'exists', 'forall', 'equiv', 'square', 'neq', 'geq', 'leq', 'sim', 'simeq', 'approx', 'cdot', 'oplus', 'otimes', 'times', 'exp', 'ln', 'log', 'partial'] 

def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

snippet mk "inline math" iA
\$$1${VISUAL}\$$0
endsnippet

snippet dm "math display" iA
\[$1${VISUAL}\]$0
endsnippet

snippet beg "begin and end" iA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet sec "section" b
\section*{$1}$0
endsnippet

snippet par "paragraph" b
\paragraph{$1}$0
endsnippet

snippet pagebreak "pagebreak" bA
\pagebreak
endsnippet

snippet solution "solution" bA
\solution
endsnippet

context "math()"
snippet "([^\\]|^)(alpha|beta|gamma|delta|Delta|theta|Theta|lambda|pi|rho|sigma|phi|omega|nabla|infty|dots|to|leftrightarrow|setminus|mid|cap|cup|land|lor|subseteq|subset|implies|impliedby|iff|exists|forall|equiv|square|neq|geq|leq|sim|simeq|approx|cdot|oplus|otimes|times|exp|ln|log|partial|sin|cos|tan|csc|sec|cot|oint|int|iint|iiint|quad)" "quick" riA
`!p snip.rv = match.group(1)`\\`!p snip.rv = match.group(2)`
endsnippet

context "math()"
priority 11
snippet "\\(alpha|beta|gamma|delta|Delta|theta|Theta|lambda|pi|rho|sigma|phi|omega|nabla|infty|dots|to|leftrightarrow|setminus|mid|cap|cup|land|lor|subseteq|subset|implies|impliedby|iff|exists|forall|equiv|square|neq|geq|leq|sim|simeq|approx|cdot|oplus|otimes|times|exp|ln|log|partial|sin|cos|tan|csc|sec|cot|oint|int|iint|iiint|quad)([A-Za-z0-9])" "auto space" riA
\\`!p snip.rv = match.group(1)` `!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet sr "square" iA
^{2}
endsnippet

context "math()"
snippet cb "cube" iA
^{3}
endsnippet

context "math()"
snippet rd "to the ..." iA
^{$1}$0
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet
 
context "math()"
snippet mbf "mathbf" iA
\mathbf{$1}$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet sq "square root" iA
\sqrt{ $1 }$0
endsnippet

context "math()"
snippet ee "e" iA
e^{ $1 }$0
endsnippet

context "math()"
snippet frac "fraction" iA
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet lim "limit" iA
\lim_{${1:n} \to ${2:\infty}} $0
endsnippet

context "math()"
snippet curl "curl" iA
\text{curl}($1)$0
endsnippet

context "math()"
snippet union "union" iA
\cup
endsnippet

context "math()"
snippet intersection "intersection" iA
\cap
endsnippet

context "math()"
snippet and "logic and" iA
\land
endsnippet

context "math()"
snippet or "logic or" iA
\lor
endsnippet

context "math()"
snippet "\subset eq" "subseteq" iA
\subseteq
endsnippet

context "math()"
snippet "(N|Z|Q|R){2}" "mcal specific" riA
\mathbb{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet "([A-Za-z])vec" "vector" riA
\vec{`!p snip.rv = match.group(1)`}
endsnippet


context "math()"
snippet par "partial" i
\frac{ \partial ${1:y} }{ \partial ${2:x} } $0
endsnippet

context "math()"
snippet pa2 "partial 2" i
\frac{ \partial^{2} ${1:y} }{ \partial ${2:x}^{2} } $0
endsnippet

context "math()"
snippet pa3 "partial 3" i
\frac{ \partial^{3} ${1:y} }{ \partial ${2:x}^{3}} $0
endsnippet

context "math()"
snippet "pa([\w])" "quick partial" ri
\frac{ \partial }{ \partial `!p snip.rv = match.group(1)` }
endsnippet

context "math()"
snippet "pa([\w])([\w])" "quick partial" ri
\frac{ \partial `!p snip.rv = match.group(1)` }{ \partial `!p snip.rv = match.group(2)` }
endsnippet

context "math()"
snippet "pa([\w])([\w])([\w])" "quick partial 2" ri
\frac{ \partial^{2} `!p snp.rv = match.group(1)` }{ \partial `!p snip.rv = match.group(2)` \partial `!p snip.rv = match.group(3)` }
endsnippet

context "math()"
snippet "pa([\w])([\w])2" "quick partial 3" ri
\frac{ \partial^{2} `!p snip.rv = match.group(1)` }{ \partial `!p snip.rv = match.group(2)`^{2} }
endsnippet

context "math()"
snippet "de([\w])([\w])" "derivative" ri
\frac{ d`!p snip.rv = match.group(1)` }{ d`!p snip.rv = match.group(2)` }
endsnippet

context "math()"
snippet "de([\w])([\w])2" "derivative 2" ri
\frac{ d^{2} `!p snip.rv = match.group(1)` }{ d `!p snip.rv = match.group(2)`^{2} }
endsnippet

context "math()"
priority 1145
snippet dint "dint" iA
\int_{${1:0}}^{${2:\infty}} \left( $4 \right) d${3:x} $0
endsnippet

context "math()"
snippet diint "diint" iA
\int_{${1:0}}^{${2:\infty}} \int_{${4:0}}^{${5:\infty}} \left( $7 \right) d${6:y} d${3:x} $0
endsnippet

context "math()"
snippet diiint "diiint" iA
\int_{${1:0}}^{${2:\infty}} \int_{${4:0}}^{${5:\infty}} \int_{${7:0}}^{${8:\infty}} \left( $10 \right) d${9:z} d${6:y} d${3:x} $0
endsnippet

snippet align "align" iA
\begin{align*}
	$0
\end{align*}
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet lr "left right ()" iA
\left( $1${VISUAL} \right) $0
endsnippet

context "math()"
snippet te "text" i
\text{$1}$0
endsnippet

context "math()"
snippet plug "plug" iA
\Big[ $4 \Big]_{$3 = $1}^{$3 = $2} $0
endsnippet

snippet tikzpicture "tikzpicture" b
\begin{figure}[H]
	\begin{tikzpicture}
		$0
	\end{tikzpicture}
	\centering
\end{figure}
endsnippet

context "env('tikzpicture')"
snippet node "node"
\node[shape=circle,draw=black] ($1) at (${2:0,0}) {$1};$0
endsnippet

context "env('tikzpicture')"
snippet path "path"
\path [-] ($1) edge node[] {} ($2);$0
endsnippet

context "env('tikzpicture')"
snippet axis2d "axis2d"
\begin{axis} [
	axis lines = ${1:center},
	xmin = ${2:-10}, xmax = ${3:10},
	ymin = ${4:-10}, ymax = ${5:10},
	xlabel = \{\(x\)\},
	ylabel = \{\(y\)\},
	axis equal image,
]
	$0
\end{axis}
endsnippet

context "env('tikzpicture')"
snippet axis3d "axis3d"
\begin{axis} [
	xlabel = \{\(x\)\},
	ylabel = \{\(y\)\},
	zlabel = \{\(z\)\},
	width = ${1:10cm},
	axis lines = ${2:center},
	axis equal,
	view/h = ${3:45},
	view/v = ${4:45},
]
	$0
\end{axis}
endsnippet

context "env('axis')"
snippet ap
\addplot [
	domain = ${1:0:1},
	samples = ${2:100}
]
({$3});$0
endsnippet

context "env('axis')"
snippet ap3
\addplot3 [
	opacity = ${1:0.8},
	surf,
	z buffer = sort,
	samples = ${2:21},
	variable = \\${3:u},
	variable y = \\${4:v},
	domain = ${5:0:180},
	domain y = ${6:0:360},
]
(\{${7:cos(u)*sin(v)}\}, \{${8:sin(u)*sin(v)}\}, \{${9:cos(v)}\});
endsnippet

context "env('axis')"
snippet line
\draw [samples = ${1:100}${2:, thick}] (${3:0,0}) -- (${4:1,1});
endsnippet

context "env('axis')"
snippet arc
\draw [smooth = ${1:100}${2:, thick}] (${3:1,0}) arc (${4:0:180:2});
endsnippet

context "env('axis')"
snippet circ
\draw (axis cs: ${1:0,0}) circle [radius = ${2:1}];
endsnippet

snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet

context "math()"
snippet "(\w|}|\))\+" "plug space 1" iAr
`!p snip.rv = match.group(1)` +
endsnippet

context "math()"
snippet "\+(\w)" "plug space 2" iAr
+ `!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet "(\w|}|\))\-" "minus space 1" iAr
`!p snip.rv = match.group(1)` -
endsnippet

context "math()"
snippet "\-(\w)" "minus space 2" iAr
- `!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet "(\w|}|\))\=" "equal space 1" iAr
`!p snip.rv = match.group(1)` =
endsnippet

context "math()"
snippet "\=(\w|=)" "equal space 2" iAr
`!p
if match.group(1) == '=':
	snip.rv = '&='
else:
	snip.rv = '= ' + match.group(1)`
endsnippet

context "math()"
snippet case "cases" iA
\begin{cases}
	$1
\end{cases}
$0
endsnippet

context "math()"
snippet set "set" iA
\{ $1 \} $0
endsnippet

context "math()"
snippet avg "avg" iA
\langle $1 \rangle $0
endsnippet

context "math()"
snippet vmat "vmatrix" iA
\begin{vmatrix}
	$1
\end{vmatrix}
$0
endsnippet

snippet "([^\\]|^)vspace" "vspace" iAr
`!p snip.rv = match.group(1)`\vspace{${1:5px}}$0
endsnippet

snippet bf "textbf" A
\textbf{$1}$0
endsnippet

snippet template "template" b
\documentclass{article}

\usepackage{fancyhdr}
\usepackage{extramarks}
\usepackage{amsmath}
\usepackage{amsthm}
\usepackage{amsfonts}
\usepackage{tikz}
\usepackage[plain]{algorithm}
\usepackage{algpseudocode}

\usetikzlibrary{automata,positioning,backgrounds}

%
% Basic Document Settings
%

\topmargin=-0.45in
\evensidemargin=0in
\oddsidemargin=0in
\textwidth=6.5in
\textheight=9.0in
\headsep=0.25in

\linespread{1.1}

\pagestyle{fancy}
\lhead{\hmwkClass\ (\hmwkCourseID): \hmwkTitle}
\rhead{\hmwkAuthorName}
\lfoot{\lastxmark}
\cfoot{\thepage}

\renewcommand\headrulewidth{0.4pt}
\renewcommand\footrulewidth{0.4pt}

\setlength\parindent{0pt}

%
% Homework Details
%   - Title
%   - Due date
%   - Class
%   - Section/Time
%   - Instructor
%   - Author
%

\newcommand{\hmwkTitle}{Homework\ \#${1:1}}
\newcommand{\hmwkDueDate}{${2:\\today}}
\newcommand{\hmwkClass}{${3:Calculus}}
\newcommand{\hmwkCourseID}{${4:Section A}}
\newcommand{\hmwkClassInstructor}{Professor ${5:Issac Newton}}
\newcommand{\hmwkAuthorName}{\textbf{Qixuan Chen}}

%
% Title Page
%

\title{
	\vspace{2in}
	\textmd{\textbf{\hmwkClass:\ \hmwkTitle}}\\\\
	\normalsize\vspace{0.1in}\small{Due\ on\ \hmwkDueDate}\\\\
	\vspace{0.1in}\large{\textit{\hmwkClassInstructor\ \hmwkCourseID}}
	\vspace{3in}
}

\author{\hmwkAuthorName}
\date{\today}

% Alias for the Solution section header
\newcommand{\solution}{\textbf{Solution}}

\begin{document}

\maketitle

\pagebreak

$0

\end{document}
endsnippet
